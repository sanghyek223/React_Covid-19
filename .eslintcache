[{"D:\\git\\react_covid-19\\src\\index.js":"1","D:\\git\\react_covid-19\\src\\App.js":"2","D:\\git\\react_covid-19\\src\\reportWebVitals.js":"3","D:\\git\\react_covid-19\\src\\components\\Header.js":"4","D:\\git\\react_covid-19\\src\\components\\Contents.js":"5"},{"size":500,"mtime":1607141273199,"results":"6","hashOfConfig":"7"},{"size":238,"mtime":1607146875980,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607141273199,"results":"9","hashOfConfig":"7"},{"size":313,"mtime":1607146812668,"results":"10","hashOfConfig":"7"},{"size":4807,"mtime":1607156499516,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"tp9445",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"D:\\git\\react_covid-19\\src\\index.js",[],["24","25"],"D:\\git\\react_covid-19\\src\\App.js",[],"D:\\git\\react_covid-19\\src\\reportWebVitals.js",[],"D:\\git\\react_covid-19\\src\\components\\Header.js",[],"D:\\git\\react_covid-19\\src\\components\\Contents.js",["26","27","28"],"import { useState, useEffect } from 'react'\r\nimport { Bar, Doughnut, Line } from 'react-chartjs-2'\r\nimport axios from 'axios'\r\n\r\nfunction Contents() {\r\n\r\n\r\n    const [confirmdData, setConfirmdData] = useState({})\r\n    const [quarantinedData, setQuarantinedData] = useState({})\r\n    const [comparedData, setComparedData] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchEvents = async () => {\r\n            const res = await axios.get(\"https://api.covid19api.com/total/dayone/country/KR\")\r\n            //console.log(res)\r\n            makeData(res.data)\r\n        }\r\n        const makeData = (items) => {\r\n            //items.forEach(item => console.log(item))\r\n            const arr = items.reduce((acc, cur) => {\r\n                const currenDate = new Date(cur.Date);\r\n                const year = currenDate.getFullYear();\r\n                const month = currenDate.getMonth();\r\n                const date = currenDate.getDate();\r\n                const confirmed = cur.Confirmed;\r\n                const active = cur.Active;\r\n                const death = cur.Deaths;\r\n                const recovered = cur.Recovered;\r\n\r\n                const findItem = acc.find(a => a.year === year && a.month === month);\r\n\r\n                if (!findItem) {\r\n                    acc.push({\r\n                        //Key 와 value 가 같으면 Es6 부터 축약이 가능\r\n                        //year: year, month: month ,date: date, confirmed: confirmed, active: active, death: death, recovered: recovered\r\n                        year, month, date, confirmed, active, death, recovered\r\n                    })\r\n                }\r\n                if (findItem && findItem.date < date) {\r\n                    findItem.active = active;\r\n                    findItem.death = death;\r\n                    findItem.date = date;\r\n                    findItem.year = year;\r\n                    findItem.month = month;\r\n                    findItem.recovered = recovered;\r\n                    findItem.confirmed = confirmed;\r\n                }\r\n\r\n\r\n\r\n                //console.log(cur, year, month, date)\r\n                return acc;\r\n            }, [])\r\n\r\n            //console.log(arr)\r\n            const labels = arr.map(a => `${a.month+1}월`);\r\n            setConfirmdData({\r\n                labels: labels,\r\n                datasets: [\r\n                    {\r\n                        label: \"국내 누적 확진자\",\r\n                        backgroundColor: \"salmon\",\r\n                        fill: true,\r\n                        data: arr.map(a => a.confirmed)\r\n                    }\r\n                ]\r\n            });\r\n\r\n            setQuarantinedData({\r\n                labels: labels,\r\n                datasets: [\r\n                    {\r\n                        label: \"월별 격리자 현황\",\r\n                        borderColor: \"salmon\",\r\n                        fill: true,\r\n                        data: arr.map(a => a.active)\r\n                    }\r\n                ]\r\n            });\r\n\r\n            const last = arr[arr.length -1]\r\n            setComparedData({\r\n                labels: [\"학진자\", \"격리해제\", \"사망자\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"누적 확진, 해제, 사망 비율\",\r\n                        backgroundColor: [\"#ff3d67\",\"#059bff\",\"#ffc233\"],\r\n                        borderColor: [\"#ff3d67\",\"#059bff\",\"#ffc233\"],\r\n                        fill: true,\r\n                        data: [last.confirmed, last.recovered, last.death]\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        fetchEvents();\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <section>\r\n            <h2>국내 코로나 현황</h2>\r\n            <div className=\"contents\">\r\n                <div>\r\n                    <Bar data={confirmdData} oprions={\r\n                        { title: { display: true, text: \"누적 확진자 추이\", fontSize: 16 } },\r\n                        { legend: { display: true, position: \"bottom\" } }\r\n                    } />\r\n                </div>\r\n                <div>\r\n                    <Line data={quarantinedData} oprions={\r\n                        { title: { display: true, text: \"월별 격리자 현황\", fontSize: 16 } },\r\n                        { legend: { display: true, position: \"bottom\" } }\r\n                    } />\r\n                </div>\r\n                <div>\r\n                    <Doughnut data={comparedData} oprions={\r\n                        { title: { display: true, text: `누적, 확진, 해제, 사망 (${new Date().getMonth() + 1}월)`, fontSize: 16 } },\r\n                        { legend: { display: true, position: \"bottom\" } }\r\n                    } />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Contents\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":108,"column":86,"nodeType":"35","messageId":"36","endLine":108,"endColumn":87},{"ruleId":"33","severity":1,"message":"34","line":114,"column":86,"nodeType":"35","messageId":"36","endLine":114,"endColumn":87},{"ruleId":"33","severity":1,"message":"34","line":120,"column":123,"nodeType":"35","messageId":"36","endLine":120,"endColumn":124},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]